{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Route/Home/HomePresenter.js","api.js","Route/Home/index.js","Route/Home/HomeContainer.js","Route/TV/TVPresenter.js","Route/TV/index.js","Route/TV/TVContainer.js","Route/Search/SearchPresenter.js","Route/Search/index.js","Route/Search/SearchContainer.js","Route/Detail/DetailPresenter.js","Route/Detail/index.js","Route/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","includes","to","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","HomePresenter","nowPlaying","upcoming","popular","error","loading","Loader","length","map","movie","key","poster_path","original_title","vote_average","release_date","substring","proptyles","PropTypes","array","string","bool","isRequired","api","axios","create","baseURL","params","get","moviesApi","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","Component","TVPresenter","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","showResults","searchTerm","handleSubmit","updateTerm","onSubmit","onChange","placeholder","value","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","Math","max","episode_run_time","genres","genre","index","name","overview","DetailContainer","push","history","match","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0c54828.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.a520db39.png\";","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Header = styled.header`\n  color: #fff;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  box-shadow: 0 1px 5px 2px rgba(0, 0, 0, 0.8);\n  z-index: 10;\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${({ current }) => (current ? '#3498db' : 'transparent')};\n  transition: border-bottom 0.3s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === '/' || pathname.includes('/movie')}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === '/tv' || pathname.includes('/show')}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === '/search'}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  padding: 50px;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import React from 'react';\nimport Proptypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.2s linear;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  opacity: 0;\n  transition: opacity 0.2s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require('../assets/noPosterSmall.png')\n          }\n        ></Image>\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{' '}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>{title}</Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: Proptypes.number.isRequired,\n  imageUrl: Proptypes.string,\n  title: Proptypes.string.isRequired,\n  rating: Proptypes.number,\n  year: Proptypes.string,\n  isMovie: Proptypes.bool\n};\n\nexport default Poster;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.proptyles = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default HomePresenter;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/'\n});\n\nconst API_KEY = 'c4bc936a3f5d50dcf78ebe33563e21c2';\nconst LANG = 'en-US';\nconst params = `?api_key=${API_KEY}&language=${LANG}`;\n\napi.get(`tv/popular${params}`);\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(`movie/now_playing${params}`),\n  upcoming: () => api.get(`movie/upcoming${params}`),\n  popular: () => api.get(`movie/popular${params}`),\n  movieDetail: id =>\n    api.get(`movie/${id}${params}`, {\n      params: {\n        append_to_response: 'videos'\n      }\n    }),\n  search: term =>\n    api.get(`search/movie${params}`, {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n\nexport const tvApi = {\n  topRated: () => api.get(`tv/top_rated${params}`),\n  popular: () => api.get(`tv/popular${params}`),\n  airingToday: () => api.get(`tv/airing_today${params}`),\n  showDetail: id =>\n    api.get(`tv/${id}${params}`, {\n      params: {\n        append_to_response: 'videos'\n      }\n    }),\n  search: term =>\n    api.get(`search/tv${params}`, {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n","import HomeContainer from './HomeContainer';\n\nexport default HomeContainer;\n","import React, { Component } from 'react';\nimport HomePresenter from './HomePresenter';\nimport { moviesApi } from 'api';\n\nexport default class extends Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch (error) {\n      this.setState({\n        error: `Can't find movie information: ${error}`\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default TVPresenter;\n","import TVContainer from './TVContainer';\n\nexport default TVContainer;\n","import React, { Component } from 'react';\nimport TVPresenter from './TVPresenter';\nimport { tvApi } from 'api';\n\nexport default class extends Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n\n      this.setState({\n        topRated,\n        popular,\n        airingToday\n      });\n    } catch (error) {\n      this.setState({ error: `Can't find TV information: ${error}` });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Loader from 'Components/Loader';\nimport Section from 'Components/Section';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  showResults,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        onChange={updateTerm}\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n      ></Input>\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {showResults && showResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {showResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {showResults &&\n          movieResults &&\n          showResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message color=\"#95a5a6\" text=\"Nothing found\"></Message>\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  showResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from './SearchContainer';\n\nexport default SearchContainer;\n","import React, { Component } from 'react';\nimport SearchPresenter from './SearchPresenter';\nimport { moviesApi } from 'api';\nimport { tvApi } from 'api';\n\nexport default class extends Component {\n  state = {\n    movieResults: null,\n    showResults: null,\n    searchTerm: '',\n    error: null,\n    loading: false\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== '') {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value }\n    } = event;\n    this.setState({ searchTerm: value });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: showResults }\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, showResults });\n    } catch (error) {\n      this.setState({ error: `Can't find results: ${error}` });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const {\n      movieResults,\n      showResults,\n      searchTerm,\n      error,\n      loading\n    } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        showResults={showResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-size: cover;\n  background-position: center center;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n  position: relative;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-size: cover;\n  background-position: center center;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <>\n      {error ? (\n        <Message text={error} color=\"#e74c3c\" />\n      ) : (\n        <Container>\n          <Helmet>\n            <title>\n              {result.original_title\n                ? result.original_title\n                : result.original_name}{' '}\n              | Nomflix\n            </title>\n          </Helmet>\n          <Backdrop\n            bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n          ></Backdrop>\n          <Content>\n            <Cover\n              bgImage={\n                result.poster_path\n                  ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                  : require('../../assets/noPosterSmall.png')\n              }\n            />\n            <Data>\n              <Title>\n                {result.original_title\n                  ? result.original_title\n                  : result.original_name}\n              </Title>\n              <ItemContainer>\n                <Item>\n                  {result.release_date\n                    ? result.release_date.substring(0, 4)\n                    : result.first_air_date.substring(0, 4)}\n                </Item>\n                <Divider>•</Divider>\n                <Item>\n                  {result.runtime\n                    ? result.runtime\n                    : Math.max(...result.episode_run_time)}{' '}\n                  min\n                </Item>\n                <Divider>•</Divider>\n                <Item>\n                  {result.genres &&\n                    result.genres.length > 0 &&\n                    result.genres.map((genre, index) =>\n                      index === result.genres.length - 1\n                        ? genre.name\n                        : `${genre.name} / `\n                    )}\n                </Item>\n              </ItemContainer>\n              <Overview>{result.overview && result.overview}</Overview>\n            </Data>\n          </Content>\n        </Container>\n      )}\n    </>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default DetailPresenter;\n","import DetailContainer from './DetailContainer';\n\nexport default DetailContainer;\n","import React, { Component } from 'react';\nimport DetailPresenter from './DetailPresenter';\nimport { moviesApi, tvApi } from 'api';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes('/movie/')\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      history: { push },\n      match: {\n        params: { id }\n      }\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push('/');\n    }\n    let result;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch (error) {\n      this.setState({ error: `Can't find anything: ${error}` });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\nimport Header from 'Components/Header';\nimport Home from 'Route/Home';\nimport TV from 'Route/TV';\nimport Search from 'Route/Search';\nimport Detail from 'Route/Detail';\n\nexport default () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/tv\" exact component={TV} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/show/:id\" component={Detail} />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </Router>\n);\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    * {\n        box-sizing: border-box;\n    }\n    a {\n        text-decoration: none; \n        color: inherit;\n    }\n    body {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20,20,20,1);\n        color: #fff;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;\n","import React from 'react';\nimport Router from 'Components/Router';\nimport GlobalStyles from 'Components/GlobalStyles';\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}